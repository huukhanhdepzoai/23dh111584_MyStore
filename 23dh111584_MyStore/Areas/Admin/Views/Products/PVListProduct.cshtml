@model _23dh111584_MyStore.Models.ViewModels.ProductSearchVM
@using PagedList.Mvc
<head>
    <style>
        img {
            height: 150px;
            max-width: 150px;
        }

        .pagination-container {
            display: flex;
            justify-content: center;
            padding-top: 20px;
        }

            .pagination-container .pagination li {
                display: inline;
                margin: 0 4px;
            }

                .pagination-container .pagination li a, .pagination-container .pagination li span {
                    color: #333;
                    padding: 8px 16px;
                    text-decoration: none;
                    border: 1px solid #ddd;
                    transition: background-color .3s;
                }

                .pagination-container .pagination li.active a,
                .pagination-container .pagination li.active span {
                    background-color: #007bff;
                    color: white;
                    border: 1px solid #007bff;
                }

                .pagination-container .pagination li a:hover:not(.active) {
                    background-color: #ddd;
                }
    </style>
</head>

@if (Model.Products != null && Model.Products.Any())
{
    <h2 class="bg-success">DANH SÁCH SẢN PHẨM</h2>
    <table class="table bg-info table-responsive">
        <thead>
            <tr>
                <th class="bg-success col-md-2">Hình Ảnh</th>
                <th class="bg-success col-md-3">Tên Sản Phẩm</th>
                <th class="bg-success col-md-1">Đơn Giá</th>
                <th class="bg-success col-md-4">Danh Mục</th>
                <th class="bg-success col-md-4"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model.Products)
            {
                <tr>
                    <td><img src="@Html.DisplayFor(modelItem => product.ProductImage)" /></td>
                    <td>@Html.DisplayFor(modelItem => product.ProductName) </td>
                    <td>@Html.DisplayFor(modelItem => product.ProductPrice) </td>
                    <td>@Html.DisplayFor(modelItem => product.Category.CategoryName) </td>
                    <td>
                        @Html.ActionLink("Sửa", "Edit", new { id = product.ProductID }, new { @class = "btn btn-primary btn-sm" })
                        @Html.ActionLink("Chi tiết", "Details", new { id = product.ProductID }, new { @class = "btn btn-primary btn-sm" })
                        @Html.ActionLink("Xóa", "Delete", new { id = product.ProductID }, new { @class = "btn btn-primary btn-sm" })

                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="pagination-container">
        @Html.PagedListPager(Model.Products, page => @Url.Action("Index", new { page, searchTerm = Model.SearchTerm, minPrice = Model.MinPrice, maxPrice = Model.MaxPrice, sortOder = Model.SortOrder }),
        new PagedListRenderOptions
        {
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always,
            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
            DisplayLinkToLastPage = PagedListDisplayMode.Always,
            MaximumPageNumbersToDisplay = 5,
            DisplayEllipsesWhenNotShowingAllPageNumbers = true
        })
    </div>
}
else
{
    < p > Không tìm thấy sản phẩm nào phù hợp </ p >
}
<div class="form-group">
    <div class="col-md-offset-8 col-md-4">
        @Html.ActionLink("Thêm mới", "Create", null, new { @class = "btn btn-primary" })
    </div>
</div>

